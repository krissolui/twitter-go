version: '3'

services:
    broker-service:
        build:
            context: ./../broker-service
            dockerfile: ./../broker-service/broker-service.dockerfile
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        ports:
            - '8080:80'

    session-service:
        build: 
            context: ./../session-service
            dockerfile: ./../session-service/session-service.dockerfile
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            MONGO_URL: ${MONGO_URL}
            MONGO_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        ports:
            - '8081:80'
    
    auth-service:
        build:
            context: ./../auth-service
            dockerfile: ./../auth-service/auth-service.dockerfile
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            DSN: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?${POSTGRES_ARGS}
        ports:
            - "8082:80"

    mongo:
        image: mongo:4.2.24-bionic
        restart: always
        deploy:
            mode: global
        environment:
            MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
            MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
            MONGO_INITDB_DATABASE: "${MONGO_INITDB_DATABASE}"
        volumes:
            - "./db-data/mongo:/data/db"
        ports:
            - "27017:27017"
    
    postgres:
        image: postgres:14.9
        restart: always
        deploy:
            mode: global
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - "./db-data/postgres:/var/lib/postgresql/data"
        ports:
            - "5432:5432"